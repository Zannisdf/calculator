{"version":3,"sources":["components/keyboard.js","components/display.js","utilities/trim.js","utilities/math.js","App.js","serviceWorker.js","index.js"],"names":["Keyboard","_this$props","this","props","numbers","operators","decimal","reset","equal","back","react_default","a","createElement","className","onClick","id","value","Component","Display","_ref","input","operation","error","length","join","trim","s","test","slice","handleMultAndDiv","arr","i","includes","mult","parseFloat","splice","div","handleSumAndMinus","sum","minus","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","executed","e","operator","evt","target","prevState","concat","toConsumableArray","trimmedOperation","state","display","keyboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f00be523.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Keyboard extends Component {\n  render() {\n    const { numbers, operators, decimal, reset, equal, back } = this.props\n    return(\n      <div className='button-container'>\n        <button onClick={reset} id=\"clear\">AC</button>\n        <button onClick={operators} value=\"/\">/</button>\n        <button onClick={operators} value=\"*\">x</button>\n        <button onClick={numbers} value=\"7\">7</button>\n        <button onClick={numbers} value=\"8\">8</button>\n        <button onClick={numbers} value=\"9\">9</button>\n        <button onClick={operators} value=\"-\">-</button>\n        <button onClick={numbers} value=\"4\">4</button>\n        <button onClick={numbers} value=\"5\">5</button>\n        <button onClick={numbers} value=\"6\">6</button>\n        <button onClick={operators} value=\"+\">+</button>\n        <button onClick={numbers} value=\"1\">1</button>\n        <button onClick={numbers} value=\"2\">2</button>\n        <button onClick={numbers} value=\"3\">3</button>\n        <button onClick={equal} id=\"equals\">=</button>\n        <button onClick={numbers} value=\"0\">0</button>\n        <button onClick={decimal} value=\".\">.</button>\n        <button onClick={back} id=\"back\"><i className=\"fas fa-long-arrow-alt-left\"></i></button>\n      </div>\n    )\n  }\n}\n\nexport default Keyboard;\n","import React from 'react';\n\nconst Display = ({ input, operation, error }) => {\n\n  return (\n    <div id='display'>\n      <p>{operation.length === 0 ? '0' : operation.join('')}</p>\n      <p>{error ? 'ERROR' : input}</p>\n    </div>\n  )\n}\n\nexport default Display\n","const trim = (s) => /\\D$/.test(s) ? s.slice(0,-1) : s\nexport default trim\n","export const handleMultAndDiv = (arr) => {\n  let i = 0;\n  while (arr.includes('*') || arr.includes('/')) {\n    if (arr[i] === '*'){\n      let mult = parseFloat(arr[i-1]) * parseFloat(arr[i+1]);\n      arr.splice(i-1,3,mult);\n      i = 0;\n    } else if (arr[i] === '/'){\n      if (parseFloat(arr[i+1])===0){\n        arr.splice(0,arr.length,'ERROR');\n      } else {\n        let div = parseFloat(arr[i-1]) / parseFloat(arr[i+1]);\n        arr.splice(i-1,3,div);\n      }\n      i = 0;\n    }\n    i++;\n  }\n  return arr;\n}\n\nexport const handleSumAndMinus = (arr) => {\n  let i = 0;\n  while (arr.length > 1) {\n    if (arr[i] === '+'){\n      let sum = parseFloat(arr[i-1]) + parseFloat(arr[i+1]);\n      arr.splice(i-1,3,sum);\n      i = 0;\n    } else if (arr[i] === '-'){\n      let minus = parseFloat(arr[i-1]) - parseFloat(arr[i+1]);\n      arr.splice(i-1,3,minus);\n      i = 0;\n    }\n    i++;\n  }\n  return arr;\n}\n","import React, { Component } from 'react';\nimport Keyboard from './components/keyboard';\nimport Display from './components/display';\nimport trim from './utilities/trim';\nimport './App.css'\nimport { handleMultAndDiv, handleSumAndMinus } from './utilities/math'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      input: '0',\n      executed: true,\n      operation: [],\n      error: false\n    }\n  }\n\n  reset = () => this.setState({ input:'0', executed: true, operation: [], error: false });\n\n  numbers = e => {\n    const operator = /^[+-/*]|^0(?!\\.)/\n    let evt = e.target.value;\n    this.setState(prevState => ({\n      input: operator.test(prevState.input) || prevState.executed ? evt : prevState.input + evt,\n      executed: false,\n      error: false\n    }))\n  };\n\n  operators = e => {\n    let evt = e.target.value;\n    this.setState(prevState => ({\n      input: evt,\n      operation: /\\d/.test(prevState.input) ? [...prevState.operation, trim(prevState.input), evt] : [...prevState.operation.slice(0,-1), evt]\n    }))\n  };\n\n  decimal = e => {\n    let evt = e.target.value\n    this.setState(prevState => {\n      if (!/\\.|[+-/*]/.test(prevState.input)){\n        return ({ input: prevState.input + evt })\n      }\n    })\n  };\n\n  equal = () => {\n    this.setState(prevState => {\n      let trimmedOperation = /^[+-/*]/.test(prevState.input) ? prevState.operation.slice(0,-1) : [...prevState.operation, trim(prevState.input)];\n      handleMultAndDiv(trimmedOperation);\n      if (trimmedOperation[0] === 'ERROR'){\n        return ({ input: '0', executed: true, operation: [], error: true })\n      } else {\n        handleSumAndMinus(trimmedOperation);\n        return ({ input: trimmedOperation[0], executed: true, operation: [] });\n      }\n    });\n  };\n\n  back = () => {\n    this.setState( prevState => ({\n      input: prevState.input.length > 1 ? prevState.input.slice(0,-1) : /[+-/*]/.test(prevState.input) ? prevState.input : '0'\n    }));\n  };\n\n  render() {\n    return (\n      <div className='calculator-container'>\n        <Display\n          input={this.state.input}\n          operation={this.state.operation}\n          error={this.state.error}/>\n        <Keyboard\n          numbers={this.numbers}\n          operators={this.operators}\n          decimal={this.decimal}\n          reset={this.reset}\n          equal={this.equal}\n          back={this.back}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}